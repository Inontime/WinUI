<?xml version="1.0" encoding="utf-8" ?>
<UserControl x:Class="IAS.WinUI.Controls.Scheduler"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="using:IAS.WinUI.Controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             x:Name="SchedulerControl"
             mc:Ignorable="d">
    <UserControl.Resources>
        <DataTemplate x:Key="TimeItemTemplate" x:DataType="local:TimeItemGroup">
            <Grid Width="{x:Bind Width}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="{x:Bind DateString}" />
                    <TextBlock Text="{x:Bind TimeString}" />
                </StackPanel>
                <ItemsRepeater Grid.Row="1" ItemsSource="{x:Bind MinorItems}">
                    <ItemsRepeater.Layout>
                        <StackLayout Orientation="Horizontal" />
                    </ItemsRepeater.Layout>
                    <ItemsRepeater.ItemTemplate>
                        <DataTemplate x:DataType="local:TimeItem">
                            <Grid Width="{x:Bind Width}"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Background="{StaticResource LayerOnMicaBaseAltFillColorDefaultBrush}"
                                  BorderBrush="{StaticResource LayerOnMicaBaseAltFillColorTransparentBrush}"
                                  BorderThickness="1" />
                        </DataTemplate>
                    </ItemsRepeater.ItemTemplate>
                </ItemsRepeater>
            </Grid>

        </DataTemplate>

    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition x:Name="DetailsColumn" Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <ScrollView x:Name="DetailsScrollViewer"
                    Grid.Row="1"
                    Grid.Column="1"
                    HorizontalScrollBarVisibility="Visible"
                    VerticalScrollBarVisibility="Visible"
                    ZoomMode="Disabled">
            <!--  Must have a min width to ensure scrolling  -->
            <Grid x:Name="RepeaterGrid">
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="TimeSeriesRow" Height="40" />
                    <RowDefinition x:Name="DetailsRow" Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <!--
                        The width should adapt to the requested amount of the resource name, but getting all of the columns to be the sam
                        width is tricky with no great solution in WinUI
                    -->
                    <ColumnDefinition x:Name="ResourceNameColumn" Width="80" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <ItemsRepeater x:Name="TimeHeadersItemsRepeater"
                               Grid.RowSpan="2"
                               Grid.Column="1"
                               ItemTemplate="{StaticResource TimeItemTemplate}"
                               ItemsSource="{x:Bind _timeItems, Mode=OneWay}">

                    <ItemsRepeater.Layout>
                        <StackLayout Orientation="Horizontal" />
                    </ItemsRepeater.Layout>
                    <ItemsRepeater.RenderTransform>
                        <TranslateTransform x:Name="TimesHeadersTransform" />
                    </ItemsRepeater.RenderTransform>

                </ItemsRepeater>
                <ItemsRepeater x:Name="ResourceItemsRepeater"
                               Grid.Row="1"
                               Grid.ColumnSpan="2"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Stretch"
                               ItemsSource="{x:Bind _rowItems}">
                    <ItemsRepeater.ItemTemplate>
                        <DataTemplate x:DataType="local:ResourceItem">
                            <Grid Height="{x:Bind MinHeight, Mode=OneWay}"
                                  BorderBrush="{StaticResource AccentFillColorDefaultBrush}"
                                  BorderThickness="0,1,0,1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" MinWidth="{Binding ElementName=ResourceNameColumn, Path=ActualWidth, Mode=OneWay}" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="ResourceTextBlock" Text="{x:Bind Resource, Mode=OneWay}" />
                                <Grid Grid.Column="1"
                                      Background="{StaticResource AcrylicBackgroundFillColorBaseBrush}"
                                      Opacity=".8" />
                            </Grid>
                        </DataTemplate>
                    </ItemsRepeater.ItemTemplate>
                    <ItemsRepeater.RenderTransform>
                        <TranslateTransform x:Name="ResourceItemsTransform" />
                    </ItemsRepeater.RenderTransform>

                </ItemsRepeater>
                <Grid x:Name="DetailsClipContainer"
                      Grid.Row="1"
                      Grid.Column="1">
                    <ItemsRepeater x:Name="DetailsItemsRepeater"
                                   MinHeight="{Binding ElementName=DetailsRow, Path=ActualHeight}"
                                   ItemTemplate="{x:Bind ItemTemplate, Mode=OneWay}"
                                   ItemsSource="{x:Bind ItemsSource, Mode=OneWay}" />
                </Grid>

            </Grid>
        </ScrollView>

    </Grid>
</UserControl>
<!--
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="TimeScaleSelection">
                <VisualState x:Name="Default" />
                <VisualState x:Name="FourHour">
                    <VisualState.Setters>
                        <Setter Target="FourHourButton.Style" Value="{StaticResource AccentButtonStyle}" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind TimeScale, Mode=OneWay, Converter={StaticResource SchedulerTimeScaleValueConverter}, ConverterParameter=FourHour}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="EightHour">
                    <VisualState.Setters>
                        <Setter Target="EightHourButton.Style" Value="{StaticResource AccentButtonStyle}" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind TimeScale, Mode=OneWay, Converter={StaticResource SchedulerTimeScaleValueConverter}, ConverterParameter=EightHour}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="TwelveHour">
                    <VisualState.Setters>
                        <Setter Target="TwelveHourButton.Style" Value="{StaticResource AccentButtonStyle}" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind TimeScale, Mode=OneWay, Converter={StaticResource SchedulerTimeScaleValueConverter}, ConverterParameter=TwelveHour}" />

                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="TwentyFourHour">
                    <VisualState.Setters>
                        <Setter Target="TwentyFourHourButton.Style" Value="{StaticResource AccentButtonStyle}" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind TimeScale, Mode=OneWay, Converter={StaticResource SchedulerTimeScaleValueConverter}, ConverterParameter=TwentyFourHour}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Week">
                    <VisualState.Setters>
                        <Setter Target="WeekButton.Style" Value="{StaticResource AccentButtonStyle}" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind TimeScale, Mode=OneWay, Converter={StaticResource SchedulerTimeScaleValueConverter}, ConverterParameter=Week}" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>-->
